@using Humanizer
@inject TagManager tagManager

<MudCard>
    <div style="position:relative">
        <MudCardMedia Image="https://clip.cafe/clipimg/did-make-it.jpg" Height="250" />
        <MudText Color="Color.Inherit"
                 Align="Align.Center"
                 Typo="Typo.h1"
                 Style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
            @Post?.Title
        </MudText>
    </div>
    <MudCardContent>
        <MudText>@GetPublishDate() (<ToLocal DateTime="@Post!.CreatedAt" Format="ddd mmm dd yyyy HH:MM:ss" />)</MudText>
        <MudMarkdown Value="@Post?.Contents" />
        <MudChipSet>
            @foreach (var tag in Post?.Tags ?? Enumerable.Empty<Tag>())
            {
              <MudLink Href=@($"/tags?filter={@tag.Name.ToLower()}")>
                <MudChip Text=@tag.Name Variant="Variant.Text" Color="Color.Secondary" />
              </MudLink>
            }
        </MudChipSet>
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public Post? Post { get; set; }

    private string GetPublishDate() => $"{this.Post?.CreatedAt.Humanize()}"
      ?? "Published some time in the past.";

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}
